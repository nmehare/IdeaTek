{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/auth/auth.guard.ts","webpack:///./src/app/components/auth/auth.interceptor.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/login/logout/logout.component.css","webpack:///./src/app/components/login/logout/logout.component.html","webpack:///./src/app/components/login/logout/logout.component.ts","webpack:///./src/app/components/posts/post-create/post-create.component.css","webpack:///./src/app/components/posts/post-create/post-create.component.html","webpack:///./src/app/components/posts/post-create/post-create.component.ts","webpack:///./src/app/components/posts/post-list/post-list.component.css","webpack:///./src/app/components/posts/post-list/post-list.component.html","webpack:///./src/app/components/posts/post-list/post-list.component.ts","webpack:///./src/app/components/posts/posts.service.ts","webpack:///./src/app/components/posts/posts1.service.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/shared/unique-email-validator.directive.ts","webpack:///./src/app/components/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PostCreateComponent } from './components/posts/post-create/post-create.component';\nimport { PostListComponent } from './components/posts/post-list/post-list.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthGuard } from './components/auth/auth.guard';\nimport { LogoutComponent } from './components/login/logout/logout.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'create', component: PostCreateComponent,canActivate:[AuthGuard] },\n  { path: 'posts', component: PostListComponent },\n  { path: '', redirectTo:'home', pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"main{\\r\\n    width: 80%;\\r\\n    margin: 1rem auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWlue1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogMXJlbSBhdXRvO1xyXG59Il19 */\"","module.exports = \"    <!-- header -->\\n    <app-header></app-header>\\n\\n    <!-- routes will be rendered here -->\\n    <main>\\n    <router-outlet></router-outlet>\\n    </main>\\n    <!-- <main>\\n        <app-post-create></app-post-create>\\n        <app-post-list></app-post-list>\\n    </main> -->\\n    \\n    <!-- footer -->\\n    <app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'IdeaTekClient';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatExpansionModule,MatListModule } from '@angular/material';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PostListComponent } from './components/posts/post-list/post-list.component';\nimport { PostCreateComponent } from './components/posts/post-create/post-create.component';\nimport { PostsService } from './components/posts/posts.service';\nimport { Posts1Service } from './components/posts/posts1.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserService } from './components/user.service';\nimport { AuthGuard } from './components/auth/auth.guard';\nimport { AuthInterceptor } from './components/auth/auth.interceptor';\nimport { LogoutComponent } from './components/login/logout/logout.component';\nimport { UniqueEmailValidatorDirective } from './components/shared/unique-email-validator.directive';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    PostListComponent,\n    PostCreateComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    UniqueEmailValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatExpansionModule,MatListModule\n  ],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass:AuthInterceptor,\n    multi:true\n  },PostsService,Posts1Service,UserService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService : UserService, private router: Router){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):  boolean  {\n      if(!this.userService.isLoggedIn()){\n        this.router.navigateByUrl('/posts');\n        this.userService.deleteToken();\n        return false;\n      }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../user.service';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport {tap} from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next:HttpHandler) {\r\n        if(req.headers.get('noauth'))\r\n        return next.handle(req.clone());\r\n        else{\r\n            const clonedreq = req.clone({\r\n               headers:req.headers.set(\"Authorization\",\"Bearer \"+ this.userService.getToken()) \r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => {},\r\n                    err => {\r\n                        if(err.error.auth == false){\r\n                            this.router.navigateByUrl('/posts');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n    }\r\n  constructor(private userService : UserService, private router: Router){\r\n  }\r\n}","module.exports = \"footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    background-color: #2f303ade;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsT0FBTztJQUNQLFNBQVM7SUFDVCxXQUFXO0lBQ1gsMkJBQTJCO0lBQzNCLFlBQVk7SUFDWixrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzMDNhZGU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiB9Il19 */\"","module.exports = \"<!-- Footer -->\\n<footer>\\n\\n    <!-- Copyright -->\\n    <div class=\\\"footer-copyright text-center py-3\\\">© 2019 Copyright:\\n        Bringing your ideas to life!\\n    </div>\\n    <!-- Copyright -->\\n  \\n  </footer>\\n  <!-- Footer -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <a [routerLink]=\\\"['home']\\\" class=\\\"navbar-brand\\\">\\n        <h1><strong>IdeaTek</strong></h1>\\n      </a>\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li><a [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">Home</a></li>\\n          <li><a [routerLink]=\\\"['/login']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">Login</a></li>\\n          <li><a [routerLink]=\\\"['/register']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">Register</a></li>\\n          <li><a [routerLink]=\\\"['/logout']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">LogOut</a></li>\\n          <li><a [routerLink]=\\\"['/posts']\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">Posts</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</mat-toolbar>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row d-flex d-md-block flex-nowrap wrapper\\\">\\n    <div class=\\\"col-md-1 float-left col-1 pl-0 pr-0 collapse width\\\" id=\\\"sidebar\\\">\\n      <div class=\\\"list-group border-0 card text-center text-md-left\\\">\\n        <a href=\\\"#\\\" class=\\\"list-group-item d-inline-block collapsed\\\" data-parent=\\\"#sidebar\\\"><i class=\\\"fa fa-gear\\\"></i>\\n          <span class=\\\"d-none d-md-inline\\\">Home</span></a>\\n\\n        <a [routerLink]=\\\"['/posts']\\\" class=\\\"list-group-item d-inline-block collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#sidebar\\\"\\n          aria-expanded=\\\"false\\\"><i class=\\\"fa fa-dashboard\\\"></i> <span class=\\\"d-none d-md-inline\\\">Posts</span> </a>\\n        <div class=\\\"collapse\\\" id=\\\"menu1\\\">\\n          <a routerLink=\\\"/create\\\" class=\\\"list-group-item\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\">Add New Posts</a>\\n          <a [routerLink]=\\\"['/posts']\\\" class=\\\"list-group-item\\\" data-parent=\\\"#menu1\\\">View All</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-parent=\\\"#menu1\\\">Subitem 3</a>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"list-group-item d-inline-block collapsed\\\" data-parent=\\\"#sidebar\\\"><i\\n            class=\\\"fa fa-calendar\\\"></i> <span class=\\\"d-none d-md-inline\\\">Help</span></a>\\n        </div>\\n    </div>\\n    <main class=\\\"col-md-10 col px-5 pl-md-2 pt-2 main mx-auto\\\">\\n      <a href=\\\"#\\\" data-target=\\\"#sidebar\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"false\\\"><i\\n          class=\\\"fa fa-navicon fa-2x py-2 p-1\\\"></i></a>\\n      <div class=\\\"page-header\\\">\\n        <h3>Share and Get An Idea</h3>\\n      </div>\\n      <hr>\\n    </main>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n    <mat-card-title>\\n  What Is An IdeaTek And Why?\\n    </mat-card-title>\\n    <mat-card-content>\\n        <mat-list>\\n            <mat-list-item >Idea is a thought is made-up of a bunch of activity through various, interconnected neural network in a brain.</mat-list-item>\\n            <mat-list-item> Sometimes people do not share their creative ideas and they forget or die with it, but if you give them money motivation they will start sharing their ideas and one of their idea may change the world.\\n              </mat-list-item>\\n            <mat-list-item> According to the Neuroscience each and every individual get 10,000 ideas in a day.\\n              </mat-list-item>\\n              <mat-list-item> Important innovative Idea needs to be  valued, logged, shared with everyone.\\n              </mat-list-item>\\n              <mat-list-item>\\n                  IdeaTek will give unique platform to log, share and sell the ideas.\\n               \\n              </mat-list-item>\\n              <mat-list-item>\\n                  Pool of these creative ideas may help individuals, companies, corporations to get benefited\\n            \\n              </mat-list-item>\\n          </mat-list>\\n        </mat-card-content>\\n  </mat-card>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field,\\r\\ninput{\\r\\n    width:100%;\\r\\n    align-content:center;\\r\\n    \\r\\n}\\r\\n\\r\\n.main-div{\\r\\n    display:inline-block; \\r\\n  }\\r\\n\\r\\nmat-card-cvr{\\r\\n    top:50%; width:100%; text-align:center; position:fixed;\\r\\n }\\r\\n\\r\\ndiv {\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 400px;\\r\\n    height: 200px;\\r\\n  }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFVBQVU7SUFDVixvQkFBb0I7O0FBRXhCOztBQUVBO0lBQ0ksb0JBQW9CO0VBQ3RCOztBQUVGO0lBQ0ksT0FBTyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxjQUFjO0NBQ3pEOztBQUVBO0lBQ0csa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixNQUFNO0lBQ04sUUFBUTtJQUNSLFNBQVM7SUFDVCxPQUFPO0lBQ1AsWUFBWTtJQUNaLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxyXG5pbnB1dHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBhbGlnbi1jb250ZW50OmNlbnRlcjtcclxuICAgIFxyXG59XHJcblxyXG4ubWFpbi1kaXZ7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jazsgXHJcbiAgfVxyXG5cclxubWF0LWNhcmQtY3Zye1xyXG4gICAgdG9wOjUwJTsgd2lkdGg6MTAwJTsgdGV4dC1hbGlnbjpjZW50ZXI7IHBvc2l0aW9uOmZpeGVkO1xyXG4gfVxyXG5cclxuIGRpdiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gIH1cclxuICJdfQ== */\"","module.exports = \"<div>\\n    <h4>Login component</h4>\\n    <mat-card layout=\\\"row\\\" class=\\\"mat-card-cvr\\\">\\n        <form (submit)=\\\"logIn(loginForm)\\\" #loginForm=\\\"ngForm\\\" id=\\\"loginForm\\\">\\n            <mat-form-field>\\n                <input matInput type='text' placeholder='Enter UserName' name=\\\"username\\\" ngModel required\\n                    #username=\\\"ngModel\\\" minlength=\\\"5\\\">\\n\\n            </mat-form-field>\\n            <mat-form-field>\\n                <input type='password' rows=\\\"4\\\" placeholder='Enter Password' matInput name=\\\"password\\\" ngModel\\n                    required #password=\\\"ngModel\\\">\\n\\n            </mat-form-field>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Log In</button>\\n        </form>\\n    </mat-card>\\n</div>\\n\\n<div class='alert' *ngIf=\\\"serverErrMsg\\\">\\n    {{serverErrMsg}}\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nuser:{\n  username:'',\n  password:''\n};\n\nserverErrMsg:string;\n  constructor(private userService: UserService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  logIn(form: NgForm){\n    this.userService.logInNode(form.value).subscribe(\n      res => {\n        this.userService.setToken(res['token']); //for jwt successful authentication\n        alert(\"Logged-in successfully, redirecting to posts home page\");\n        this.router.navigateByUrl('/posts');\n      },\n      err => {\n        this.serverErrMsg = err.error.message;\n      }\n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9nb3V0L2xvZ291dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private userservice:UserService, private router:Router) { }\n\n  ngOnInit() {\n    this.userservice.deleteToken();\n    alert(\"You are logged Out, please login again to add posts\");\n        this.router.navigateByUrl('/posts');\n    // this.router.navigate(['/posts']);\n  }\n\n}\n","module.exports = \"mat-form-field,\\r\\ntextarea{\\r\\n    width:100%;\\r\\n    \\r\\n}mat-form-field,\\r\\ninput{\\r\\n    width:100%;\\r\\n    align-content:center;\\r\\n    \\r\\n}.main-div{\\r\\n    display:inline-block; \\r\\n  }mat-card-cvr{\\r\\n    top:50%; width:100%; text-align:center; position:fixed;\\r\\n }div {\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 400px;\\r\\n    height: 200px;\\r\\n  }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb3N0cy9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFVBQVU7O0FBRWQsQ0FBQzs7SUFFRyxVQUFVO0lBQ1Ysb0JBQW9COztBQUV4QixDQUVBO0lBQ0ksb0JBQW9CO0VBQ3RCLENBRUY7SUFDSSxPQUFPLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixFQUFFLGNBQWM7Q0FDekQsQ0FFQTtJQUNHLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osTUFBTTtJQUNOLFFBQVE7SUFDUixTQUFTO0lBQ1QsT0FBTztJQUNQLFlBQVk7SUFDWixhQUFhO0VBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxcclxudGV4dGFyZWF7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgXHJcbn1tYXQtZm9ybS1maWVsZCxcclxuaW5wdXR7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgYWxpZ24tY29udGVudDpjZW50ZXI7XHJcbiAgICBcclxufVxyXG5cclxuLm1haW4tZGl2e1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7IFxyXG4gIH1cclxuXHJcbm1hdC1jYXJkLWN2cntcclxuICAgIHRvcDo1MCU7IHdpZHRoOjEwMCU7IHRleHQtYWxpZ246Y2VudGVyOyBwb3NpdGlvbjpmaXhlZDtcclxuIH1cclxuXHJcbiBkaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICB9XHJcbiAiXX0= */\"","module.exports = \"<h2>Post create component</h2>\\r\\n\\r\\n<mat-card>\\r\\n    <form  (submit)=\\\"onAddPost(postForm)\\\" #postForm=\\\"ngForm\\\" id=\\\"newPost\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput type='text' placeholder=\\\"Enter Title\\\" name=\\\"title\\\" ngModel required #title=\\\"ngModel\\\" minlength=\\\"5\\\">\\r\\n            <mat-error *ngIf=\\\"title.invalid\\\">Please enter title</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <textarea rows=\\\"4\\\" matInput placeholder=\\\"Enter Content\\\"  required name=\\\"body\\\" ngModel #body=\\\"ngModel\\\" ></textarea>\\r\\n            <mat-error>Please enter content(optional)</mat-error>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save Post</button>\\r\\n    </form>\\r\\n</mat-card>\\r\\n<!-- <p>{{ newPost }}</p> -->\\r\\n\\r\\n\\r\\n<!--h2>Post create component</h2>//below code fro two way binding uncomment and uncomment onáddPost method\\r\\n\\r\\n//textarea rows=\\\"6\\\" [value]=\\\"newPost\\\" #postInput></textarea>\\r\\n<mat-card>\\r\\n        <mat-form-field>\\r\\n                <input matInput type='text' [(ngModel)]=\\\"enteredTitle\\\" required #title=\\\"ngModel\\\">\\r\\n                <mat-error *ngIf=\\\"enteredTitle.invalid\\\">Please enter title</mat-error>\\r\\n            </mat-form-field>\\r\\n<mat-form-field>\\r\\n<textarea rows=\\\"6\\\" matInput [(ngModel)]=\\\"enteredContent\\\"></textarea>\\r\\n</mat-form-field>\\r\\n</mat-card>\\r\\n<hr>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onAddPost()\\\">Save Post</button>\\r\\n\\r\\n<p>{{ newPost }}</p-->\"","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\nimport{Post} from '../../posts/post.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { PostsService } from '../posts.service';\r\nimport { Posts1Service } from '../posts1.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-post-create',\r\n    templateUrl: './post-create.component.html',\r\n    styleUrls:['./post-create.component.css']\r\n    \r\n})\r\nexport class PostCreateComponent implements OnInit{\r\n    ngOnInit(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n   // newPost = 'No Content';\r\n    enteredContent=\"\";\r\n    enteredTitle=\"\";\r\n    posts11: Object;\r\n    error: any;\r\n   // @Output() postCreated=new EventEmitter<Post>();//generic type pass additional info\r\n\r\n    constructor(public postsservice:PostsService, private posts1service:Posts1Service, private router:Router) { //i want to have post service instance  \r\n    }\r\n\r\n  \r\nonAddPost(form: NgForm){\r\n    if(form.invalid){\r\n        return;\r\n    }\r\n  //  alert(\"InsidePost Added\");\r\n   // const post:Post={\r\n   //     title:form.value.title,\r\n   //     content:form.value.content\r\n//};\r\n    //this.postCreated.emit(post);\r\n    \r\n    this.posts1service\r\n    .addPost(form.value.title,form.value.body)\r\n    .subscribe((data)=>{\r\n      this.posts11=data['post'];\r\n      alert(\"Posts Added successfully, redirecting to posts home page\");\r\n        this.router.navigateByUrl('/posts');\r\n      console.log(\"data for addition\");\r\n      console.log(this.posts11);\r\n    }, (error => {this.error = error;\r\n        console.log(\"Please Login to Add a Post\");\r\n        console.log(this.error)}) // error path\r\n    );\r\n   // this.posts1service.addPost(form.value.title,form.value.body);\r\n   // alert(\"InsidePost Added end\");\r\n}\r\n\r\n    // onAddPost(){\r\n\r\n    //     const post:Post={title: this.enteredTitle,\r\n    //     content:this.enteredContent\r\n    // };\r\n    // this.postCreated.emit(post);\r\n\r\n//}\r\n       // onAddPost(postInput: HTMLTextAreaElement){\r\n        //console.dir(postInput);\r\n       // this.newPost= this.enteredvalue;\r\n        //this.newPost= postInput.value;\r\n        //this.newPost= 'The user\\'s post';\r\n       // alert(\"Post Added\");\r\n\r\n\r\n         //add new post\r\n \r\n    }\r\n","module.exports = \":host{\\r\\n    margin-top:1rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcclxuICAgIG1hcmdpbi10b3A6MXJlbTtcclxufSJdfQ== */\"","module.exports = \"<button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create Post</button>\\n<br>\\n<strong>User needs to login to add a Post</strong>\\n<br>\\n<br>\\n<mat-accordion multi='true' *ngIf=\\\"posts1.length > 0\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts1\\\">\\n    <mat-expansion-panel-header>\\n      {{post.title}}\\n    </mat-expansion-panel-header>\\n    <p>{{post.body}}</p>\\n    <p><span ng-show=\\\"post.author\\\" style=\\\"float:right;\\\">\\n        posted by <span class=\\\"text-capitalize\\\">{{post.author}}</span>\\n        <!-- Displays time stamp (on large screens) -->\\n        <span id=\\\"dateTime\\\"> at {{post.createdOn | date : 'h:mm a'}} on {{post.createdOn | date : 'M/d/yy'}}</span>\\n      </span></p>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<p class=\\\"mat-body-1\\\" *ngIf=\\\"posts1.length <= 0 \\\">No post added yet</p>\\n\\n\\n\\n\\n\\n<!-- Loops through posts -->\\n<!-- <div *ngFor='let post of posts1'>\\n\\n      <div id=\\\"postContainer\\\">\\n \\n        <!-- Displays title and links to comment page -->\\n<!-- <a href=\\\"#/posts/{{post._id}}\\\"><strong>{{post.title}}</strong></a> -->\\n\\n<!-- Displays number of comments -->\\n<!-- <h6><a class=\\\"comments\\\" routerLink=\\\"/posts/{{post._id}}\\\"><span style=\\\"text-align:left;\\\">{{post.comments.length}} comments</span></a> -->\\n\\n\\n\\n<!-- Displays author floated to the right -->\\n<!-- <span ng-show=\\\"post.author\\\" style=\\\"float:right;\\\"> -->\\n<!-- posted by <span class=\\\"text-capitalize\\\">{{post.author}}</span> -->\\n<!-- Displays time stamp (on large screens) -->\\n<!-- <span id=\\\"dateTime\\\"> at {{post.createdOn | date : 'h:mm a'}} on {{post.createdOn | date : 'M/d/yy'}}</span> -->\\n<!-- </span></h6> -->\\n<!-- </div> -->\\n<!-- </div> -->\\n<!-- \\n\\n\\n<div class=\\\"card\\\"> \\n    <div class=\\\"card-header\\\">    \\n       {{pageTitle}}   \\n       </div>    \\n         <div class=\\\"card-body\\\">     \\n            <div class='table-responsive'>       \\n                  <table class='table' *ngIf='posts1 && posts1.length'>            \\n                      <thead>\\n                      <tr> \\n                         \\n                        <th>Author</th>   \\n                        <th>body</th>\\n                        <th>comments</th> \\n                        <th>createdon</th> \\n                        <th>title</th>   \\n                        <th>votes</th>\\n                      </tr>      \\n                     </thead>\\n                     <tbody>           \\n                                    <tr *ngFor='let sensor of posts1'>   \\n                                      <td>{{ sensor.author }}</td>      \\n                                      <td>{{ sensor.body }}</td>      \\n                                      <td>{{ sensor.comments }}</td>      \\n                                      <td>{{ sensor.createdOn }}</td>\\n                                      <td>{{ sensor.title }}</td>      \\n                                      <td>{{ sensor.votes }}</td>              \\n                                    </tr>             \\n                      </tbody>            \\n            </table>  \\n       </div>   \\n     </div>     \\n   </div> -->\\n<div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../../posts/post.model';\nimport { PostsService } from '../posts.service';\nimport { Subscription } from 'rxjs';\nimport { Posts1Service } from '../posts1.service';\nimport { IPosts } from '../../../Posts.model';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  posts1:IPosts[];\n  // posts=[\n  //   {title:'First', content:'this is content of 1 post'},\n  //   {title:'second', content:'this is content of 2 post'},\n  //   {title:'third', content:'this is content of 3 post'}\n  // ];\n\n  //@Input() posts:Post[]=[];\n  posts: Post[] = [];\n  private postsSub:Subscription;\n  constructor(public postsservice: PostsService, private posts1service:Posts1Service, private router:Router) { //i want to have post service instance\n\n  }\n\n\n  fetchPosts1(){\n    this.posts1service\n    .getPosts1()\n    .subscribe((data:IPosts[])=>{\n      this.posts1=data;\n      console.log(\"data requested\");\n      console.log(\"this.posts1\");\n    });\n  }\n  ngOnDestroy(){\n    \n    this.postsSub.unsubscribe();\n  }\n  editPosts1(id){\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n  deletePosts1(id){\n    this.posts1service.deletePost(id).subscribe(()=>{\n      this.fetchPosts1();\n    })\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n\n  ngOnInit() {//life cycle hook..automatical execute when compo initialised\n    this.fetchPosts1();\n   // this.posts1service.getPosts1().subscribe((posts) =>{\n     // console.log(posts);\n    //});\n    this.posts = this.postsservice.getPosts();\n    this.postsSub= this.postsservice.getPostUpdateListner().subscribe(\n      (posts: Post[]) => {\n        this.posts = posts;\n      }\n    );\n\n  }\n\n}\n","import { Post } from './post.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n//@Injectable({providedIn:'root'})//only create one instance of service for entire app\r\nexport class PostsService{\r\n    posts:Post[] = [];\r\n    private postsUpdated = new Subject<Post[]>();\r\n    getPosts(){\r\n       // return this.posts;//dont retun original array\r\n       return [...this.posts];//add posts in new array with all obj so this array has been copied\r\n    }\r\n\r\n\r\n    getPostUpdateListner(){\r\n        return this.postsUpdated.asObservable();\r\n    }\r\n    \r\n    addPost(title:string, content:string){\r\n        const post:Post = {title:title,content:content};\r\n        this.posts.push(post);\r\n        this.postsUpdated.next([...this.posts]);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Post } from './post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Posts1Service {\n\n  uri='http://localhost:3000';\n  constructor( private http: HttpClient) { }\n\n  getPosts1(){\n    return this.http.get(`${this.uri}/posts`);\n  }\n\n  getPosts1ById(id){\n    return this.http.get(`${this.uri}/posts/${id}`);\n  }\n\n  addPost(title:string,body:string){\n    alert('inside addpost method');\n    const post = {\n      title:title,\n      body:body\n    };\n    return this.http.post(`${this.uri}/posts`,post);\n  }\n\n  \n  updatePost(id, title,content){\n    const post = {\n      id:id,\n      title:title,\n      content:content\n    };\n    return this.http.post(`${this.uri}/posts/update/${id}`,post);\n  }\n\n  deletePost(id){\n    return this.http.get(`${this.uri}/posts/delete/${id}`);\n  }\n\n}\n","module.exports = \"mat-form-field,\\r\\ninput{\\r\\n    width:100%;\\r\\n    align-content:center;\\r\\n    \\r\\n}\\r\\n\\r\\n.main-div{\\r\\n    display:inline-block; \\r\\n  }\\r\\n\\r\\nmat-card-cvr{\\r\\n    top:50%; width:100%; text-align:center; position:fixed;\\r\\n }\\r\\n\\r\\ndiv {\\r\\n    position: absolute;\\r\\n    margin: auto;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 400px;\\r\\n    height: 200px;\\r\\n  }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFVBQVU7SUFDVixvQkFBb0I7O0FBRXhCOztBQUVBO0lBQ0ksb0JBQW9CO0VBQ3RCOztBQUVGO0lBQ0ksT0FBTyxFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxjQUFjO0NBQ3pEOztBQUVBO0lBQ0csa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixNQUFNO0lBQ04sUUFBUTtJQUNSLFNBQVM7SUFDVCxPQUFPO0lBQ1AsWUFBWTtJQUNaLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxyXG5pbnB1dHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBhbGlnbi1jb250ZW50OmNlbnRlcjtcclxuICAgIFxyXG59XHJcblxyXG4ubWFpbi1kaXZ7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jazsgXHJcbiAgfVxyXG5cclxubWF0LWNhcmQtY3Zye1xyXG4gICAgdG9wOjUwJTsgd2lkdGg6MTAwJTsgdGV4dC1hbGlnbjpjZW50ZXI7IHBvc2l0aW9uOmZpeGVkO1xyXG4gfVxyXG5cclxuIGRpdiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gIH1cclxuICJdfQ== */\"","module.exports = \"<div>\\n    <h4>Register component</h4>\\n    <mat-card layout=\\\"row\\\" class=\\\"mat-card-cvr\\\">\\n        <form (submit)=\\\"register(registerForm)\\\" #registerForm=\\\"ngForm\\\" id=\\\"registerForm\\\">\\n            <mat-form-field>\\n                <input matInput type='text' placeholder='Enter UserName' name=\\\"username\\\" ngModel required\\n                    #username=\\\"ngModel\\\" minlength=\\\"5\\\">\\n                    <mat-error *ngIf=\\\"username.errors.forbiddenName\\\">Please enter Unique User Name</mat-error>\\n           \\n            </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <input type='password' placeholder='Enter Password' matInput name=\\\"password\\\" ngModel required\\n                    #password=\\\"ngModel\\\">\\n\\n            </mat-form-field>\\n            <br>\\n\\n            <mat-form-field>\\n                <input type='email' placeholder='Enter Email' matInput name=\\\"email\\\" ngModel\\n                    pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" required #email=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"email.errors &&(email.touched || email.dirty)\\\">Please enter valid Email</mat-error>\\n                <mat-error *ngIf=\\\"email.invalid\\\">Please enter Email(Spam) to validate Webservice(SendGrid)</mat-error>\\n            </mat-form-field>\\n            <br>\\n\\n            <mat-form-field>\\n                <input type='phone' placeholder='Enter Phone' matInput name=\\\"phone\\\" ngModel required #phone=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"phone.invalid\\\">Please enter Phone to validate Webservice(Nexmo)</mat-error>\\n            </mat-form-field>\\n            <br>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Register</button>\\n        </form>\\n    </mat-card>\\n</div>\\n<div class='alert' *ngIf=\\\"serverErrMsg\\\">\\n    {{serverErrMsg}}\\n\\n</div>\\n<div class='alert' *ngIf=\\\"serverSuccessMsg\\\">\\n    {{serverSuccessMsg}}\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { NgForm, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  serverErrMsg: any;\n  serverSuccessMsg: string;\n  submitted = false;\n  registerForm: FormGroup;\n  constructor( private router:Router, private userService:UserService) { }\n\n  ngOnInit() {\n\n  }\n\n  register(form:NgForm){\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (form.invalid) {\n        return;\n    }\n    \n    this.userService.registerUser(form.value).subscribe(\n      res => {\n        this.userService.setToken(res['token']); //for jwt successful authentication\n        this.router.navigateByUrl('/login');\n        alert(form.value.email);\n        alert(\"User registered successfully\");\n        this.serverSuccessMsg = \"User Registered Successfully\";\n      },\n      err => {\n\n        alert(\"User Already Exist\");\n        this.serverErrMsg = err.error.message;\n      }\n    )\n\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appUniqueEmailValidator]'\n})\nexport class UniqueEmailValidatorDirective {\n\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  selectedUser:User={\n    username:'',\n    password:'',\n    email:'',\n    phone:0\n  };\n  uri='http://localhost:3000';\n  constructor( private http: HttpClient) { }\n\n//pass this to method whcih does not need authentication\n  noAuthHeader= {headers:new HttpHeaders({'noAuth':'True'})};\n//request to nodejs api\n  logInNode(authCredentials){\n    return this.http.post(`${this.uri}/login`,authCredentials);\n  }\n\n  registerUser(user:User){\n    return this.http.post(`${this.uri}/register`,user);\n  }\n\n\n  //helper methods\n  getToken(){\n   return localStorage.getItem('token');\n  }\n\n  setToken(token:string){\n    localStorage.setItem('token',token);\n  }\n\n  deleteToken(){\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload(){\n    var token = localStorage.getItem('token');\n    if(token){\n      var userPayload = atob(token.split('.')[1]);//decode and encode data\n      return JSON.parse(userPayload);\n    }\n    else{\n      return null;\n    }\n  }\n\n  isLoggedIn(){\n    var userPayload = this.getUserPayload();\n    if(userPayload){\n      return userPayload.exp > Date.now() / 1000;\n    }\n    else{\n      return false;\n    }\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}